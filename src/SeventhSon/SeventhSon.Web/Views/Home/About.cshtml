@{
    ViewData["Title"] = "About";
}
<h2>@ViewData["Title"]</h2>
<h3>@ViewData["Message"]</h3>

<p>Seventh Son</p>

<style type="text/css">
    #container {
        max-width: 700px;
        height: 700px;
        margin: auto;
    }
</style>

<script src="~/lib/signalr-client/signalr-client-1.0.0-alpha2-final.js"></script>
<script src="~/lib/sigma/sigma.min.js"></script>
<script src="~/lib/sigma/plugins/sigma.parsers.json.min.js"></script>

<button onclick="connection.invoke('Send','Yo!')">Send Yo!</button>

<div id="container"></div>

<script>

</script>

<script>
    var connection = new signalR.HubConnection('/eventhub');
    connection.on('send', function (data) {
        console.log(data);
    });
    connection.start();

    setTimeout(function ()
    { 
        FB.getLoginStatus(function (response) {
            if (response.status === 'connected') {
                // the user is logged in and has authenticated your
                // app, and response.authResponse supplies
                // the user's ID, a valid access token, a signed
                // request, and the time the access token 
                // and signed request each expire
                var uid = response.authResponse.userID;
                var accessToken = response.authResponse.accessToken;

                FB.api('/me', {
                    fields: 'name, picture, hometown'
                }, function (response) {
                    if (!response || response.error) {
                        console.warn("no response or error");                        
                    } else {
                        drawUserNode(response);
                    }
                });

            } else if (response.status === 'not_authorized') {
                // the user is logged in to Facebook, 
                // but has not authenticated your app
            } else {
                // the user isn't logged in to Facebook.
            }
        })
    }, 3000);

    function drawUserNode (userInfo) {

        // Let's first initialize sigma:
        var s = new sigma('container');

        // Then, let's add some data to display:
        var root = s.graph.addNode({
            // Main attributes:
            id: 'n0',
            label: userInfo.name,
            // Display attributes:
            x: 0,
            y: 0,
            size: 1,
            color: '#f00'
        });

        FB.api('/search?q=burger&type=place', null, function (response) {
            if (!response || response.error) {
                console.warn("no response or error");
            } else {
                var last; 
                for (var i = 0; i < response.data.length; i++) {
                    var next = i + 1
                    last = root.addNode({
                        // Main attributes:
                        id: 'n' + next,
                        label: response.data[i].name,
                        // Display attributes:
                        x: i + 1,
                        y: i + 1,
                        size: 1,
                        color: '#f00'
                    })        
                }

                last.addEdge({
                    id: 'e0',
                    // Reference extremities:
                    source: 'n0',
                    target: 'n24'
                })
            }
        });

        // Finally, let's ask our sigma instance to refresh:
        s.refresh();
    }

</script>

